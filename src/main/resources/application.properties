
# H2
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:file:./db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
#Not sure whether I need this:
jdbc:h2:mem:test;DB_CLOSE_DELAY=-1

server.port=8080

# AWS configure
cloud.aws.credentials.access-key=AKIARALMO6LF77Y6V3XN
cloud.aws.credentials.secret-key=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
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false

# -- Multipart file
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

#Oauth2 configure
spring.security.oauth2.client.registration.google.client-id=321120958853-q5kljprjo8l2jqgv1qrpi2pdvg0qju49.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 